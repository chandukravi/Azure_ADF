{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"Blob Storage1": {
			"type": "string"
		},
		"SqlServer1": {
			"type": "string"
		},
		"AzureSqlDatabase1": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy data from on premise SQL Server to SQL Azure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from on premise SQL Server to SQL Azure.\n\nYou can also go to \"Copy Data Tool\" to get the pipeline for more connectors and scenarios.",
				"activities": [
					{
						"name": "SQL_to_SQLAzure",
						"description": "Copy data from SQL server to SQL Azure",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlSource"
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"redirectIncompatibleRowSettings": {
								"linkedServiceName": {
									"referenceName": "[parameters('Blob Storage1')]",
									"type": "LinkedServiceReference"
								},
								"path": "bootdiagnostics-ckvm-89d61ff5-13ea-438a-9652-dca6d197e915"
							},
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"eid": "eid",
									"ename": "ename",
									"DepID": "DepID"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataSource",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DataDestination",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "SQL to BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SQL_to_SQLAzure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * from test",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true,
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "eid"
										},
										"sink": {
											"path": "$['eid']"
										}
									},
									{
										"source": {
											"name": "ename"
										},
										"sink": {
											"path": "$['ename']"
										}
									},
									{
										"source": {
											"name": "DepID"
										},
										"sink": {
											"path": "$['DepID']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DataDestination",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference"
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataSource')]",
				"[concat(variables('factoryId'), '/datasets/DataDestination')]",
				"[concat(variables('factoryId'), '/datasets/Json1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data source store.",
				"linkedServiceName": {
					"referenceName": "[parameters('SqlServer1')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"structure": [
					{
						"name": "eid",
						"type": "Int32"
					},
					{
						"name": "ename",
						"type": "String"
					},
					{
						"name": "DepID",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[test]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connect to your data destination store.",
				"linkedServiceName": {
					"referenceName": "[parameters('AzureSqlDatabase1')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "eid",
						"type": "Int32"
					},
					{
						"name": "ename",
						"type": "String"
					},
					{
						"name": "DepID",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[test]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('Blob Storage1')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "abc",
						"folderPath": "chandu",
						"container": "bootdiagnostics-ckvm-89d61ff5-13ea-438a-9652-dca6d197e915"
					}
				}
			},
			"dependsOn": []
		}
	]
}